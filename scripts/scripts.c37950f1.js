"use strict";angular.module("geomeditApp",["ui.router","ngAnimate","mgcrea.ngStrap","pascalprecht.translate","LocalStorageModule"]).config(["$stateProvider","localStorageServiceProvider",function(a,b){a.state("toolbox",{templateUrl:"views/toolbox.html"}).state("properties",{templateUrl:"views/properties.html"}),b.setPrefix("geomedit")}]),angular.module("geomeditApp").config(["$translateProvider",function(a){a.translations("en",{Languages:"UI Language",SnapOptions:"Snapping Options",SnapVertex:"Snap to vertex",SnapMid:"Snap to midpoint",SnapCenter:"Snap to center",SnapCross:"Snap to intersection",SnapGlider:"Snap to edge",Loading:"Loading...",CmdLine:"Segment",CmdCircle3:"Circle through three points"}).translations("cn",{Languages:"界面语言",SnapOptions:"捕捉选项",SnapVertex:"允许捕捉顶点",SnapMid:"允许捕捉中点",SnapCenter:"允许捕捉圆心",SnapCross:"允许捕捉交点",SnapGlider:"允许捕捉线上点",Loading:"正在加载...",CmdLine:"线段",CmdCircle3:"过三点画圆"}).preferredLanguage("cn").useSanitizeValueStrategy(null)}]),angular.module("geomeditApp").factory("options",function(){return{draggingMode:!0,gestureMode:!0,activeTool:"",snap:{vertex:!0,mid:!0,center:!0,cross:!0,glider:!0,items:[{type:"switch",id:"vertex",title:"SnapVertex"},{type:"switch",id:"mid",title:"SnapMid"},{type:"switch",id:"center",title:"SnapCenter"},{type:"switch",id:"cross",title:"SnapCross"},{type:"switch",id:"glider",title:"SnapGlider"}]}}}),angular.module("geomeditApp").factory("board",function(){return{initAttr:{originX:100,originY:400,unitX:50,unitY:50,keepAspectRatio:!0,axis:!0,grid:!0,showCopyright:!1,showNavigation:!1,registerEvents:!1},board:null,draft:[],commands:[],command:null,initOptions:{point:{withLabel:!1}}}}),angular.module("geomeditApp").controller("MainCtrl",["$scope","$state","$translate","localStorageService","header","commands","properties","options",function(a,b,c,d,e,f,g,h){a.leftButtons=e.leftButtons,a.rightButtons=e.rightButtons,a.toolbox=f,a.properties=g.properties,a.snap=h.snap,a.sidebar={views:[{state:"toolbox",icon:"wrench"},{state:"properties",icon:"list-alt"}],state:"",hidden:d.get("sidebarHidden"),go:function(a){this.state=a,b.go(a)},toggleVisible:function(){this.hidden=!this.hidden,d.set("sidebarHidden",this.hidden)}},a.sidebar.go("toolbox"),c.use(d.get("lang")),a.switchLanguage=function(a){c.use(a),d.set("lang",a)}}]),angular.module("geomeditApp").service("header",["options",function(a){var b=!1,c=!1,d={icon:"reply",disabled:function(){return!b},click:function(){b=!b}},e={icon:"share",disabled:function(){return!c},click:function(){c=!c}},f={icon:"arrows",checked:function(){return a.draggingMode},click:function(){a.draggingMode=!a.draggingMode}},g={icon:"pencil",checked:function(){return a.gestureMode},click:function(){a.gestureMode=!a.gestureMode}},h={icon:"reorder",click:function(){}},i={icon:"cog",popover:"options",click:function(a){a.showOptionsPopover()}};this.leftButtons=[h,d,e,f,g],this.rightButtons=[i]}]),angular.module("geomeditApp").service("properties",function(){this.properties=[{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Line Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"}]}),angular.module("geomeditApp").directive("edPopover",["$popover",function(a){function b(b,c,d,e){return a(c,{contentTemplate:e,html:!0,trigger:"manual",placement:"bottom",autoClose:!0,scope:b})}return{link:function(a,c,d){switch(d.edPopover){case"options":var e=b(a,c,"Options","views/options.html");a.showOptionsPopover=function(){e.show()}}}}}]),angular.module("geomeditApp").directive("leftExpandable",["boardService",function(a){return{link:function(b,c){var d=c.css("margin-left");b.$watch("sidebar.hidden",function(b){c.css("margin-left",b?0:d),a.resizeBoard(c.width(),c.height())});var e=window.onresize||angular.noop;window.onresize=function(){e(),a.resizeBoard(c.width(),c.height())}}}}]),angular.module("geomeditApp").service("boardService",["board","eventHandler",function(a,b){function c(a,b){return Math.abs(a-b)<.1}this.initBoard=function(c){a.board=JXG.JSXGraph.initBoard(c,a.initAttr),a.board.moveOrigin(a.board.canvasWidth/2,a.board.canvasHeight/2),JXG.Options=JXG.deepCopy(JXG.Options,a.initOptions),b.registerHandlers()},this.freeBoard=function(){var c;return a.board&&(c=a.board.containerObj.id,b.unregisterHandlers(),JXG.JSXGraph.freeBoard(a.board),a.board=null),c},this.resizeBoard=function(b,d){if(a.board&&(!c(a.board.canvasWidth,b)||!c(a.board.canvasHeight,d))){var e=c(a.board.origin.scrCoords[1],a.board.canvasWidth/2),f=c(a.board.origin.scrCoords[2],a.board.canvasHeight/2);a.board.resizeContainer(b,d,!1,!0),a.board.applyZoom(),e&&f&&a.board.moveOrigin(a.board.canvasWidth/2,a.board.canvasHeight/2)}}}]),angular.module("geomeditApp").service("loader",["$q","$timeout",function(a,b){this.load=function(){var c=a.defer();return b(function(){c.resolve("")},500),c.promise}}]),angular.module("geomeditApp").directive("newBoard",["loader","boardService",function(a,b){return{link:function(c,d,e){a.load().then(function(){b.initBoard(e.id)})}}}]),angular.module("geomeditApp").service("motion",["board",function(a){this.startPt=null,this.lastPt=null,this.pt=null,this.dragging=!1,this.points=[],this.nodes=[],this.updateStartCoords=function(a){this.startPt=this.lastPt=this.pt=this.getCoords(a)},this.updateCoords=function(a){this.pt=this.getCoords(a)},this.clear=function(){this.clearDraft(),this.clearPoints()},this.clearPoints=function(){this.startPt=this.lastPt=this.pt=null,this.points.length=0},this.clearDraft=function(){for(;a.draft.length>0;)a.board.removeObject(a.draft.pop());for(;this.nodes.length>0;)a.board.removeObject(this.nodes.pop())},this.startPtFunc=function(){var a=this;return function(){return a.startPt?[a.startPt.usrCoords[1],a.startPt.usrCoords[2]]:[0,0]}},this.currentPtFunc=function(){var a=this;return function(){return a.pt?[a.pt.usrCoords[1],a.pt.usrCoords[2]]:[0,0]}},this.getPoint=function(a){return a=0>a?this.points.length+a:a,this.points[a]},this.setPoint=function(a,b){a=void 0===a?-1:a,a=0>a?this.points.length+a:a,this.points[a]=void 0===b?this.pt:b},this.addPoint=function(a){return this.points.push(void 0===a?this.pt:a)},this.pointCount=function(){return this.points.length},this.lastPointIsNew=function(){return this.getPoint(-1).distance(JXG.COORDS_BY_SCREEN,this.getPoint(-2))>5},this.pointWithIndex=function(a){var b=this;return[function(){var c=Math.min(a,b.points.length-1);return 0>c?0:b.points[c].usrCoords[1]},function(){var c=Math.min(a,b.points.length-1);return 0>c?0:b.points[c].usrCoords[2]}]},this.pointWithIndexes=function(b){var c=this;return b=JXG.isArray(b)?b:Array.prototype.slice.call(arguments),b.map(function(b){return c.nodes[b]=a.board.create("point",c.pointWithIndex(b),{withLabel:!1}),c.nodes[b]})},this.createPoint=function(b,c){return a.board.create("point",[this.points[b].usrCoords[1],this.points[b].usrCoords[2]],c)},this.createPoints=function(b){return this.points.map(function(c){return a.board.create("point",[c.usrCoords[1],c.usrCoords[2]],b)})},this.jsxgraphDownHandler=function(){a.board.touchStartListener.apply(a.board,arguments)},this.getMouseCoords=function(b){var c,d,e,f=JXG.getPosition(b);return a.board?(c=a.board.getCoordsTopLeftCorner(),d=f[0]-c[0],e=f[1]-c[1],new JXG.Coords(JXG.COORDS_BY_SCREEN,[d,e],a.board)):new JXG.Coords(JXG.COORDS_BY_SCREEN,[f[0],f[1]],a.board)},this.getTouchCoords=function(b,c){var d,e,f,g=JXG.getPosition(b,c);return a.board?(d=a.board.getCoordsTopLeftCorner(),e=g[0]-d[0],f=g[1]-d[1],new JXG.Coords(JXG.COORDS_BY_SCREEN,[e,f],a.board)):new JXG.Coords(JXG.COORDS_BY_SCREEN,[g[0],g[1]],a.board)},this.getCoords=function(a){return a[JXG.touchProperty]?this.getTouchCoords(a,-1):this.getMouseCoords(a)},this.getScreenCoordsXY=function(a){var b=this.getCoords(a);return[b.scrCoords[1],b.scrCoords[2]]}}]),angular.module("geomeditApp").service("eventHandler",["board","options","motion",function(a,b,c){function d(a){a.preventDefault()}function e(){a.board.update()}var f,g,h;this.registerHandlers=function(){JXG.supportsPointerEvents()?(window.navigator.pointerEnabled?(f="pointerdown",g="pointerup",h="pointermove"):(f="MSPointerDown",g="MSPointerUp",h="MSPointerMove"),JXG.Options.device="msie"):(JXG.isTouchDevice()||JXG.isFirefoxOS())&&"object"!=typeof Qt?(f="touchstart",g="touchend",h="touchmove",JXG.Options.device="tablet"):(f="mousedown",g="mouseup",h="mousemove",JXG.Options.device="pc"),JXG.supportsPointerEvents()?this.addPointerHandlers():(this.addMouseHandlers(),this.addTouchHandlers()),JXG.addEvent(a.board.containerObj,f,this.downEventHandler,this),JXG.addEvent(a.board.containerObj,h,this.moveEventHandler,this),JXG.addEvent(a.board.containerObj,g,this.upEventHandler,this)},this.unregisterHandlers=function(){this.removePointerHandlers(),this.removeMouseHandlers(),this.removeTouchHandlers(),JXG.removeEvent(a.board.containerObj,f,this.downEventHandler,this),JXG.removeEvent(a.board.containerObj,h,this.moveEventHandler,this),JXG.removeEvent(a.board.containerObj,g,this.upEventHandler,this),c.clear()},this.addPointerHandlers=function(){window.navigator.pointerEnabled?JXG.addEvent(a.board.containerObj,"pointermove",a.board.pointerMoveListener,a.board):JXG.addEvent(a.board.containerObj,"MSPointerMove",a.board.pointerMoveListener,a.board),a.board.containerObj.addEventListener("MSHoldVisual",d,!1),a.board.containerObj.addEventListener("contextmenu",d,!1),a.board.containerObj.addEventListener("selectstart",d,!1),this.jsxgraphDownHandler=function(){return a.board.pointerDownListener.apply(a.board,arguments)},a.board.hasPointerHandlers=!0},this.addMouseHandlers=function(){!a.board.hasMouseHandlers&&JXG.isBrowser&&(JXG.addEvent(a.board.containerObj,"mousemove",a.board.mouseMoveListener,a.board),a.board.containerObj.addEventListener("contextmenu",d,!1),this.jsxgraphDownHandler=function(){a.board.mouseDownListener.apply(a.board,arguments)},a.board.hasMouseHandlers=!0)},this.addTouchHandlers=function(){!a.board.hasTouchHandlers&&JXG.isBrowser&&(JXG.addEvent(a.board.containerObj,"touchmove",a.board.touchMoveListener,a.board),a.board.hasTouchHandlers=!0)},this.removePointerHandlers=function(){a.board.hasPointerHandlers&&(window.navigator.pointerEnabled?JXG.removeEvent(a.board.containerObj,"pointermove",a.board.pointerMoveListener,a.board):JXG.removeEvent(a.board.containerObj,"MSPointerMove",a.board.pointerMoveListener,a.board),a.board.hasPointerHandlers=!1)},this.removeMouseHandlers=function(){a.board.hasMouseHandlers&&(JXG.removeEvent(a.board.containerObj,"mousemove",a.board.mouseMoveListener,a.board),a.board.hasMouseHandlers=!1)},this.removeTouchHandlers=function(){a.board.hasTouchHandlers&&(JXG.removeEvent(a.board.containerObj,"touchmove",a.board.touchMoveListener,a.board),a.board.hasTouchHandlers=!1)},this.downEventHandler=function(d){a.board.hasMouseHandlers&&d[JXG.touchProperty]&&(this.removeMouseHandlers(),this.jsxgraphDownHandler=function(){a.board.touchStartListener.apply(a.board,arguments)},a.board.hasMouseHandlers=!1),c.updateStartCoords(d),c.dragging=!0,a.command?((a.command.downHandler||angular.noop)(),e()):b.draggingMode&&(this.jsxgraphDownHandler||angular.noop)(d)},this.moveEventHandler=function(b){c.dragging&&(c.updateCoords(b),a.command&&((a.command.moveHandler||angular.noop)(),e(),c.lastPt=c.pt))},this.upEventHandler=function(b){c.updateCoords(b),c.dragging=!1,a.command&&((a.command.upHandler||angular.noop)(),e())}}]),angular.module("geomeditApp").service("commands",["board","motion",function(a,b){function c(b){var c=null;return a.commands.forEach(function(a){a.id===b&&(c=a)}),c}var d=null;this.items=function(){return d&&d.length===a.commands.length||(d=a.commands.map(function(a){return{id:a.id,title:a.title}})),d},this.active=function(){return a.command?a.command.id:""},this.cancel=function(){var c=!!a.command;return a.command&&((a.command.cancelled||angular.noop)(),a.command=null,b.clearDraft()),c},this.start=function(b){if(b===this.active())return this.cancel();var d=this.cancel();if(a.command=c(b),a.command){var e=(a.command.inited||angular.noop)();"boolean"!=typeof e||e?d=!0:a.command=null}return d}}]),angular.module("geomeditApp").run(["board","motion",function(a,b){function c(){0===b.pointCount()?(b.addPoint(),b.addPoint(),a.draft[0]=a.board.create("segment",b.pointWithIndexes(0,1))):b.setPoint()}function d(){b.setPoint()}function e(){b.lastPointIsNew()&&(b.clearDraft(),a.board.create("segment",b.createPoints()),b.clearPoints())}a.commands.push({id:"line",title:"CmdLine",downHandler:c,moveHandler:d,upHandler:e})}]),angular.module("geomeditApp").run(["board","motion",function(a,b){function c(){0===b.pointCount()?(b.addPoint(),b.addPoint(),a.draft[0]=a.board.create("circumcircle",b.pointWithIndexes(0,1,2))):b.lastPointIsNew()?b.addPoint():b.setPoint()}function d(){b.setPoint()}function e(){3===b.pointCount()&&b.lastPointIsNew()&&(b.clearDraft(),a.board.create("circumcircle",b.createPoints()),b.clearPoints())}a.commands.push({id:"circle3p",title:"CmdCircle3",downHandler:c,moveHandler:d,upHandler:e})}]);