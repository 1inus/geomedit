"use strict";angular.module("geomeditApp",["ui.router","ngAnimate","mgcrea.ngStrap","pascalprecht.translate","LocalStorageModule"]).config(["$stateProvider","localStorageServiceProvider",function(a,b){a.state("toolbox",{templateUrl:"views/toolbox.html"}).state("properties",{templateUrl:"views/properties.html"}),b.setPrefix("geomedit")}]),angular.module("geomeditApp").config(["$translateProvider",function(a){var b=navigator?navigator.language||navigator.userLanguage:null;a.translations("en",{Languages:"UI Language",SnapOptions:"Snapping Options",SnapVertex:"Snap to vertex",SnapMid:"Snap to midpoint",SnapCross:"Snap to intersection",SnapGlider:"Snap to edge",Loading:"Loading...",Cmd_:"Select",CmdPoint:"Point",CmdSegment:"Segment",CmdRay:"Half-line",CmdLine:"Infinite line",CmdTriangle:"Triangle",CmdQuadrangle:"Quadrangle",CmdCircle2p:"Circle with center",CmdCircle3p:"Circle through 3 points"}).translations("cn",{Languages:"界面语言",SnapOptions:"捕捉选项",SnapVertex:"允许捕捉顶点",SnapMid:"允许捕捉中点",SnapCross:"允许捕捉交点",SnapGlider:"允许捕捉线上点",Loading:"正在加载...",Cmd_:"选择",CmdPoint:"点",CmdSegment:"线段",CmdRay:"射线",CmdLine:"直线",CmdTriangle:"三角形",CmdQuadrangle:"四边形",CmdCircle2p:"圆心圆",CmdCircle3p:"三点圆"}).preferredLanguage(b&&b.toLowerCase().indexOf("cn")>=0?"cn":"en").useSanitizeValueStrategy(null)}]),angular.module("geomeditApp").factory("options",function(){return{draggable:!0,gestureMode:!0,activeTool:"",snap:{vertex:!0,mid:!0,cross:!0,glider:!0,items:[{type:"switch",id:"vertex",title:"SnapVertex"},{type:"switch",id:"mid",title:"SnapMid"},{type:"switch",id:"cross",title:"SnapCross"},{type:"switch",id:"glider",title:"SnapGlider"}]}}}),angular.module("geomeditApp").factory("board",function(){return{initAttr:{originX:100,originY:400,unitX:50,unitY:50,keepAspectRatio:!0,axis:!0,grid:!0,showCopyright:!1,showNavigation:!1,registerEvents:!1},board:null,drafts:[],snaps:[],commands:[],command:null,initOptions:{precision:{hasPoint:8},point:{withLabel:!1},midpoint:{size:4,face:"triangleup",fillColor:"none"},intersection:{face:"cross"},glider:{face:"diamond",fillColor:"#00dd00",strokeColor:"#00dd00"}},create:function(a,b,c){return this.board.create(a,b,c)},findCommand:function(a){var b=null;return this.commands.forEach(function(c){c.id===a&&(b=c)}),b},addCommand:function(a){if(a&&JXG.isString(a.id)){var b=this.findCommand(a.id);b?JXG.extend(b,a):this.commands.push(a)}}}}),angular.module("geomeditApp").controller("MainCtrl",["$scope","$state","$translate","localStorageService","header","commands","properties","options",function(a,b,c,d,e,f,g,h){a.leftButtons=e.leftButtons,a.rightButtons=e.rightButtons,a.toolbox=f,a.properties=g.properties,a.snap=h.snap,a.sidebar={views:[{state:"toolbox",icon:"wrench"},{state:"properties",icon:"list-alt"}],state:"",hidden:d.get("sidebarHidden"),go:function(a){this.state=a,b.go(a)},toggleVisible:function(){this.hidden=!this.hidden,d.set("sidebarHidden",this.hidden)}},a.sidebar.go("toolbox"),c.use(d.get("lang")),a.switchLanguage=function(a){c.use(a),d.set("lang",a)}}]),angular.module("geomeditApp").service("header",["options","board",function(a,b){var c=!1,d=!1,e={icon:"reply",disabled:function(){return!c},click:function(){this.disabled()||(c=!c)}},f={icon:"share",disabled:function(){return!d},click:function(){this.disabled()||(d=!d)}},g={icon:"arrows",disabled:function(){return!!b.command},checked:function(){return!b.command&&a.draggable},click:function(){this.disabled()||(a.draggable=!a.draggable)}},h={icon:"pencil",disabled:function(){return!!b.command},checked:function(){return!b.command&&a.gestureMode},click:function(){this.disabled()||(a.gestureMode=!a.gestureMode)}},i={icon:"reorder",click:function(){}},j={icon:"cog",popover:"options",click:function(a){a.showOptionsPopover()}};this.leftButtons=[i,e,f,g,h],this.rightButtons=[j]}]),angular.module("geomeditApp").service("properties",function(){this.properties=[{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Line Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"},{title:"Start"},{title:"End"},{title:"Line Color"},{title:"Line Width"},{title:"Fill Color"},{title:"Line ColorLine ColorLine ColorLine ColorLine Color"}]}),angular.module("geomeditApp").directive("edPopover",["$popover",function(a){function b(b,c,d,e){return a(c,{contentTemplate:e,html:!0,trigger:"manual",placement:"bottom",autoClose:!0,scope:b})}return{link:function(a,c,d){switch(d.edPopover){case"options":var e=b(a,c,"Options","views/options.html");a.showOptionsPopover=function(){e.show()}}}}}]),angular.module("geomeditApp").directive("leftExpandable",["boardService",function(a){return{link:function(b,c){var d=c.css("margin-left");b.$watch("sidebar.hidden",function(b){c.css("margin-left",b?0:d),a.resizeBoard(c.width(),c.height())});var e=window.onresize||angular.noop;window.onresize=function(){e(),a.resizeBoard(c.width(),c.height())}}}}]),angular.module("geomeditApp").service("boardService",["board","eventHandler",function(a,b){function c(a,b){return Math.abs(a-b)<.1}this.initBoard=function(c){a.board=JXG.JSXGraph.initBoard(c,a.initAttr),a.board.moveOrigin(a.board.canvasWidth/2,a.board.canvasHeight/2),a.board.options=JXG.deepCopy(a.board.options,a.initOptions),b.registerHandlers()},this.freeBoard=function(){var c;return a.board&&(c=a.board.containerObj.id,b.unregisterHandlers(),JXG.JSXGraph.freeBoard(a.board),a.board=null),c},this.resizeBoard=function(b,d){if(a.board&&(!c(a.board.canvasWidth,b)||!c(a.board.canvasHeight,d))){var e=c(a.board.origin.scrCoords[1],a.board.canvasWidth/2),f=c(a.board.origin.scrCoords[2],a.board.canvasHeight/2);a.board.resizeContainer(b,d,!1,!0),a.board.applyZoom(),e&&f&&a.board.moveOrigin(a.board.canvasWidth/2,a.board.canvasHeight/2)}}}]),angular.module("geomeditApp").service("loader",["$q","$timeout",function(a,b){this.load=function(){var c=a.defer();return b(function(){c.resolve("")},500),c.promise}}]),angular.module("geomeditApp").directive("newBoard",["loader","boardService",function(a,b){return{link:function(c,d,e){a.load().then(function(){b.initBoard(e.id)})}}}]),angular.module("geomeditApp").service("snap",["board","options",function(a,b){function c(){var b=a.drafts.map(function(a){return a.id});return a.snaps.forEach(function(a){a.created&&b.push(a.created)}),b}function d(b,c){function d(a){var c=!1;return a.forEach(function(a){c=c||b.draftIDs.indexOf(a)>=0}),c}a.board.objectsList.forEach(function(e){e!==b.created&&a.drafts.indexOf(e)<0&&e.visProp.visible&&!d(e.parents)&&c(e)})}function e(a){function b(a){return a===JXG.OBJECT_CLASS_LINE||a===JXG.OBJECT_CLASS_CIRCLE||a===JXG.OBJECT_CLASS_CURVE}d(a,function(c){b(c.elementClass)&&c.hasPoint(a.scrx,a.scry)&&a.hits.push(c)})}function f(a){d(a,function(b){JXG.isPoint(b)&&b.hasPoint(a.scrx,a.scry)&&(a.dist=b.coords.distance(JXG.COORDS_BY_SCREEN,a.coords),a.minDist>a.dist&&(a.minDist=a.dist,a.snapped=b))})}function g(b){var c;b.hits.forEach(function(d){d.elementClass!==JXG.OBJECT_CLASS_LINE||d.straightFirst||d.straightLast||d.visProp.lastarrow||(c=a.create("midpoint",[d],a.board.options.midpoint),b.dist=c.coords.distance(JXG.COORDS_BY_SCREEN,b.coords),b.minDist>b.dist?(b.minDist=b.dist,b.snapped=d,b.mid=c):a.board.removeObject(c))})}function h(b){b.hits.forEach(function(c){var d,e=3;b.glider&&b.glider.slideObject===c?(d=b.glider,d.setPositionDirectly(JXG.COORDS_BY_SCREEN,[b.scrx,b.scry]),e=1):d=a.create("glider",b.coords.usrCoords.slice(1).concat(c)),b.dist=d.coords.distance(JXG.COORDS_BY_SCREEN,b.coords)+e,b.minDist>b.dist?(b.minDist=b.dist,b.snapped=c,b.glider&&b.glider!==d&&a.board.removeObject(b.glider),b.glider=d):d!==b.glider&&a.board.removeObject(d)})}function i(b){function c(a){return a.elementClass===JXG.OBJECT_CLASS_LINE||a.elementClass===JXG.OBJECT_CLASS_CIRCLE}var d,e,f;b.hits.forEach(function(g,h){b.hits.forEach(function(i,j){h>j&&c(g)&&c(i)&&(d=a.create("intersection",[g,i,0]),b.dist=d.coords.distance(JXG.COORDS_BY_SCREEN,b.coords),(g.elementClass===JXG.OBJECT_CLASS_CIRCLE||i.elementClass===JXG.OBJECT_CLASS_CIRCLE)&&(e=a.create("intersection",[g,i,1]),f=e.coords.distance(JXG.COORDS_BY_SCREEN,b.coords),b.dist<f?a.board.removeObject(e):(b.dist=f,a.board.removeObject(d),d=e)),b.minDist>b.dist?(b.minDist=b.dist,b.snapped=g,b.cross=d):a.board.removeObject(d))})})}this.snapCoords=function(d,j){var k=a.board.options.precision.hasPoint,l={coords:d,scrx:d.scrCoords[1],scry:d.scrCoords[2],draftIDs:c(),hits:[],minDist:k,dist:0,snapped:null,mid:null,cross:null,created:j?j.glider:null,glider:j?j.glider:null};return j&&(a.board.removeObject(j.mid),a.board.removeObject(j.cross)),b.snap.vertex&&f(l),l.minDist>k/4&&(e(l),b.snap.mid&&g(l),b.snap.cross&&!l.mid&&l.minDist>k/4&&i(l),b.snap.glider&&!l.snapped&&h(l)),l.glider&&(l.mid||l.cross||l.glider.slideObject!==l.snapped)&&(a.board.removeObject(l.glider),l.glider=null),l.created=l.mid||l.cross||l.glider,{coords:(l.created||l.snapped||l).coords,created:l.created,snapped:l.snapped,mid:l.mid,cross:l.cross,glider:l.glider,clear:function(){l.created&&(a.board.removeObject(l.created),l.created=null,l.mid=null,l.cross=null,l.glider=null),l.snapped=null},detach:function(){var a=l.created;return l.created=null,l.mid=null,l.cross=null,l.glider=null,l.snapped=null,a}}}}]),angular.module("geomeditApp").service("motion",["board","snap",function(a,b){this.startPt=null,this.lastPt=null,this.pt=null,this.dragging=!1,this.pendings=null,this.updateStartCoords=function(a){this.startPt=this.lastPt=this.pt=this.getEventCoords(a)},this.updateCoords=function(a){this.pt=this.getEventCoords(a)},this.clear=function(){this.clearDrafts(),this.clearDraftCoords()},this.clearDraftCoords=function(){for(;a.snaps.length>0;)a.snaps.pop().clear();this.startPt=this.lastPt=this.pt=null},this.clearDrafts=function(){for(;a.drafts.length>0;)a.board.removeObject(a.drafts.pop())},this.getDraftCoords=function(b){return b=void 0===b?-1:b,b=0>b?a.snaps.length+b:b,a.snaps[b].coords},this.setDraftCoords=function(c,d){c=void 0===c?-1:c,c=0>c?a.snaps.length+c:c,a.snaps[c]=b.snapCoords(void 0===d?this.pt:d,a.snaps[c])},this.addDraftCoords=function(c){return a.snaps.push(b.snapCoords(void 0===c?this.pt:c))},this.draftCoordsCount=function(){return a.snaps.length},this.hasDraftCoords=function(){return a.snaps.length>0},this.lastDraftCoordsIsNew=function(){var a=this.getDraftCoords(-1).distance(JXG.COORDS_BY_SCREEN,this.getDraftCoords(-2));return a>5},this.createDraftPoint=function(b){function c(){var c=Math.min(b,a.snaps.length-1),d=c>=0&&a.snaps[c].snapped,e=d?a.snaps[c].created:null;g.visProp.size=d?i:h.size,g.visProp.fillopacity=e&&a.snaps[c].glider?.1:d?.3:1,g.visProp.strokecolor=e?e.visProp.strokecolor:h.strokecolor}var d=function(c){var d=Math.min(b,a.snaps.length-1),e=0>d?null:a.snaps[d];return e?(e.created?e.created.coords:e.coords).usrCoords[c]:0},e=function(){return d(1)},f=function(){return d(2)},g=a.create("point",[e,f],{withLabel:!1}),h=JXG.deepCopy({},g.visProp),i=Math.max(a.board.options.precision.hasPoint,h.size+4);return g.coords.on("update",c,g),c(),a.drafts.push(g),g},this.createDraftPoints=function(a){var b=this;return a=JXG.isArray(a)?a:Array.prototype.slice.call(arguments),a.map(function(a){return b.createDraftPoint(a)})},this.createPoint=function(b,c){var d=function(){var d=a.snaps[b];return d.detach()||!d.snapped&&a.create("point",d.coords.usrCoords.slice(1),c)}();return d&&this.pendings&&this.pendings.push(d),d},this.createPoints=function(b){var c=this,d=a.snaps.map(function(d){if(d.snapped&&!d.created)return d.snapped;var e=d.created||a.create("point",d.coords.usrCoords.slice(1),b);return e&&c.pendings&&c.pendings.push(e),e});return a.snaps.length=0,d},this.submit=function(b){var c=this;try{c.clearDrafts(),c.pendings=[],b()}catch(d){throw c.pendings.forEach(function(b){a.board.removeObject(b)}),d}finally{c.pendings=null,c.clearDraftCoords()}},this.getMouseCoords=function(b){var c=JXG.getPosition(b),d=a.board.getCoordsTopLeftCorner(),e=c[0]-d[0],f=c[1]-d[1];return new JXG.Coords(JXG.COORDS_BY_SCREEN,[e,f],a.board)},this.getTouchCoords=function(b,c){var d=JXG.getPosition(b,c),e=a.board.getCoordsTopLeftCorner(),f=d[0]-e[0],g=d[1]-e[1];return new JXG.Coords(JXG.COORDS_BY_SCREEN,[f,g],a.board)},this.getEventCoords=function(a){return a[JXG.touchProperty]?this.getTouchCoords(a,-1):this.getMouseCoords(a)}}]),angular.module("geomeditApp").service("eventHandler",["board","options","motion",function(a,b,c){function d(a){a.preventDefault()}var e,f,g;this.touchMode=!1,this.registerHandlers=function(){JXG.supportsPointerEvents()?(window.navigator.pointerEnabled?(e="pointerdown",f="pointerup",g="pointermove"):(e="MSPointerDown",f="MSPointerUp",g="MSPointerMove"),JXG.Options.device="msie"):JXG.isTouchDevice()||JXG.isFirefoxOS()?(e="touchstart",f="touchend",g="touchmove",JXG.Options.device="tablet"):(e="mousedown",f="mouseup",g="mousemove",JXG.Options.device="pc"),JXG.supportsPointerEvents()?this.addPointerHandlers():(this.addMouseHandlers(),this.addTouchHandlers()),JXG.addEvent(a.board.containerObj,e,this.downEventHandler,this),JXG.addEvent(a.board.containerObj,g,this.moveEventHandler,this),JXG.addEvent(a.board.containerObj,f,this.upEventHandler,this)},this.unregisterHandlers=function(){this.removePointerHandlers(),this.removeMouseHandlers(),this.removeTouchHandlers(),JXG.removeEvent(a.board.containerObj,e,this.downEventHandler,this),JXG.removeEvent(a.board.containerObj,g,this.moveEventHandler,this),JXG.removeEvent(a.board.containerObj,f,this.upEventHandler,this),c.clear()},this.addPointerHandlers=function(){!a.board.hasPointerHandlers&&JXG.isBrowser&&(JXG.addEvent(a.board.containerObj,g,a.board.pointerMoveListener,a.board),a.board.containerObj.addEventListener("MSHoldVisual",d,!1),a.board.containerObj.addEventListener("contextmenu",d,!1),a.board.containerObj.addEventListener("selectstart",d,!1),this.jxgDownHandler=function(){return a.board.pointerDownListener.apply(a.board,arguments)},a.board.hasPointerHandlers=!0,this.touchMode=!0)},this.addMouseHandlers=function(){!a.board.hasMouseHandlers&&JXG.isBrowser&&(JXG.addEvent(a.board.containerObj,"mousemove",a.board.mouseMoveListener,a.board),a.board.containerObj.addEventListener("contextmenu",d,!1),this.jxgDownHandler=function(){a.board.mouseDownListener.apply(a.board,arguments)},a.board.hasMouseHandlers=!0)},this.addTouchHandlers=function(){!a.board.hasTouchHandlers&&JXG.isBrowser&&(JXG.addEvent(a.board.containerObj,"touchmove",a.board.touchMoveListener,a.board),a.board.hasTouchHandlers=!0)},this.removePointerHandlers=function(){a.board.hasPointerHandlers&&(JXG.removeEvent(a.board.containerObj,g,a.board.pointerMoveListener,a.board),a.board.containerObj.removeEventListener("MSHoldVisual",d,!1),a.board.containerObj.removeEventListener("contextmenu",d,!1),a.board.containerObj.removeEventListener("selectstart",d,!1),a.board.hasPointerHandlers=!1)},this.removeMouseHandlers=function(){a.board.hasMouseHandlers&&(JXG.removeEvent(a.board.containerObj,"mousemove",a.board.mouseMoveListener,a.board),a.board.containerObj.removeEventListener("contextmenu",d,!1),a.board.hasMouseHandlers=!1)},this.removeTouchHandlers=function(){a.board.hasTouchHandlers&&(JXG.removeEvent(a.board.containerObj,"touchmove",a.board.touchMoveListener,a.board),a.board.hasTouchHandlers=!1)},this.downEventHandler=function(d){a.board.hasMouseHandlers&&d[JXG.touchProperty]&&(this.removeMouseHandlers(),this.jxgDownHandler=function(){a.board.touchStartListener.apply(a.board,arguments)},a.board.hasMouseHandlers=!1,this.touchMode=!0,a.board.options.precision.hasPoint=a.board.options.precision.touch),c.updateStartCoords(d),c.dragging=!0,a.command?((a.command.downHandler||angular.noop)(),a.board.update()):b.draggable&&(this.jxgDownHandler||angular.noop)(d)},this.moveEventHandler=function(b){c.dragging&&(this.touchMode&&(a.board.options.precision.hasPoint=a.board.options.precision.touch),c.updateCoords(b),a.command&&(a.command.moveHandler?a.command.moveHandler():c.hasDraftCoords()&&c.setDraftCoords(),a.board.update(),c.lastPt=c.pt))},this.upEventHandler=function(b){c.updateCoords(b),c.dragging=!1,a.command&&((a.command.upHandler||angular.noop)(),a.board.update())}}]),angular.module("geomeditApp").service("commands",["board","motion",function(a,b){var c=null;this.items=function(){return c&&c.length===a.commands.length||(c=a.commands.map(function(a){var b=("Cmd_"+a.id).replace(/_(.)/g,function(a,b){return b.toUpperCase()});return{id:a.id,title:b}})),c},this.active=function(){return a.command?a.command.id:""},this.cancel=function(){var c=!!a.command;return a.command&&((a.command.cancelled||angular.noop)(),a.command=null,b.clearDrafts()),c},this.start=function(b){if(b===this.active())return this.cancel();var c=this.cancel();if(a.command=a.findCommand(b),a.command){var d=(a.command.inited||angular.noop)();"boolean"!=typeof d||d?c=!0:a.command=null}return c}}]),angular.module("geomeditApp").run(["board","motion",function(a,b){function c(){b.setDraftCoords(0),b.createDraftPoint(0)}function d(){b.submit(function(){b.createPoint(0)})}a.addCommand({id:"point",downHandler:c,upHandler:d})}]),angular.module("geomeditApp").run(["board","motion",function(a,b){function c(c,d,e){function f(){b.hasDraftCoords()?b.setDraftCoords():(b.addDraftCoords(),b.addDraftCoords(),a.drafts.push(a.create(d,b.createDraftPoints(0,1),e)))}function g(){b.lastDraftCoordsIsNew()&&b.submit(function(){a.create(d,b.createPoints(),e)})}a.addCommand({id:c,downHandler:f,upHandler:g})}c("segment","segment"),c("ray","line",{straightFirst:!1}),c("line","line")}]),angular.module("geomeditApp").run(["board","motion",function(a,b){function c(c,d,e){function f(){b.hasDraftCoords()?b.lastDraftCoordsIsNew()?(b.addDraftCoords(),b.lastDraftCoordsIsNew()&&b.draftCoordsCount()<d&&b.addDraftCoords()):b.setDraftCoords():(b.addDraftCoords(),b.addDraftCoords(),a.drafts.push(a.create("polygon",b.createDraftPoints(e))))}function g(){b.draftCoordsCount()===d&&b.lastDraftCoordsIsNew()&&b.submit(function(){a.create("polygon",b.createPoints())})}a.addCommand({id:c,downHandler:f,upHandler:g})}c("triangle",3,[0,1,2]),c("quadrangle",4,[0,1,2,3])}]),angular.module("geomeditApp").run(["board","motion",function(a,b){!function(){function c(){b.hasDraftCoords()?b.lastDraftCoordsIsNew()?b.addDraftCoords():b.setDraftCoords():(b.addDraftCoords(),b.addDraftCoords(),a.drafts.push(a.create("circumcircle",b.createDraftPoints(0,1,2))))}function d(){3===b.draftCoordsCount()&&b.lastDraftCoordsIsNew()&&b.submit(function(){a.create("circumcircle",b.createPoints())})}a.addCommand({id:"circle3p",downHandler:c,upHandler:d})}(),function(){function c(){b.hasDraftCoords()?b.setDraftCoords():(b.addDraftCoords(),b.addDraftCoords(),a.drafts.push(a.create("circle",b.createDraftPoints(0,1))))}function d(){b.lastDraftCoordsIsNew()&&b.submit(function(){a.create("circle",b.createPoints())})}a.addCommand({id:"circle2p",downHandler:c,upHandler:d})}()}]);